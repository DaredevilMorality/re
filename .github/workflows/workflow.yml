name: workflow
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 9999
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        continue-on-error: true
      
      - name: Setup RDP
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        continue-on-error: true
      
      - name: Set Dark Mode and Black Background
        shell: pwsh
        run: |
          # Create a solid black wallpaper
          Add-Type -TypeDefinition @"
          using System;
          using System.Drawing;
          using System.Drawing.Imaging;
          public class WallpaperCreator {
              public static void CreateBlackWallpaper(string path) {
                  using (Bitmap bmp = new Bitmap(1920, 1080)) {
                      using (Graphics g = Graphics.FromImage(bmp)) {
                          g.Clear(Color.Black);
                      }
                      bmp.Save(path, ImageFormat.Png);
                  }
              }
          }
          "@ -ReferencedAssemblies System.Drawing.dll, System.Drawing.Common.dll
          
          $wallpaperPath = "$env:TEMP\black_wallpaper.png"
          [WallpaperCreator]::CreateBlackWallpaper($wallpaperPath)
          
          # Enable dark mode for apps
          New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name AppsUseLightTheme -Value 0 -PropertyType DWORD -Force
          
          # Enable dark mode for system
          New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name SystemUsesLightTheme -Value 0 -PropertyType DWORD -Force
          
          # Set wallpaper using registry (most reliable method)
          Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name Wallpaper -Value $wallpaperPath
          Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name WallpaperStyle -Value "10"  # Fill
          Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name TileWallpaper -Value "0"
          
          # Also set for the default user profile (for new sessions)
          reg load HKU\Default_User "C:\Users\Default\NTUSER.DAT"
          reg add "HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f
          reg add "HKU\Default_User\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f
          reg add "HKU\Default_User\Control Panel\Desktop" /v Wallpaper /t REG_SZ /d $wallpaperPath /f
          reg add "HKU\Default_User\Control Panel\Desktop" /v WallpaperStyle /t REG_SZ /d "10" /f
          reg unload HKU\Default_User
          
          # Force update using SystemParametersInfo
          Add-Type @"
          using System;
          using System.Runtime.InteropServices;
          public class Wallpaper {
              [DllImport("user32.dll", CharSet = CharSet.Auto)]
              public static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
              public const int SPI_SETDESKWALLPAPER = 20;
              public const int SPIF_UPDATEINIFILE = 0x01;
              public const int SPIF_SENDWININICHANGE = 0x02;
          }
          "@
          [Wallpaper]::SystemParametersInfo([Wallpaper]::SPI_SETDESKWALLPAPER, 0, $wallpaperPath, [Wallpaper]::SPIF_UPDATEINIFILE -bor [Wallpaper]::SPIF_SENDWININICHANGE)
          
          # Set desktop background color to black as fallback
          Set-ItemProperty -Path "HKCU:\Control Panel\Colors" -Name Background -Value "0 0 0"
          
          # Apply theme changes more aggressively
          Start-Process -FilePath "rundll32.exe" -ArgumentList "themecpl.dll,OpenThemeAction" -NoNewWindow
          Start-Sleep -Seconds 2
          Stop-Process -Name "rundll32" -Force -ErrorAction SilentlyContinue
          
          # Restart explorer to apply changes
          Stop-Process -Name explorer -Force -ErrorAction SilentlyContinue
          Start-Sleep -Seconds 2
          Start-Process explorer
          
          Write-Host "Dark mode and black background settings applied"
        continue-on-error: true
      
      - name: Keep Alive
        shell: pwsh
        run: |
          while ($true) {
            Start-Sleep -Seconds 36000
          }
        continue-on-error: true